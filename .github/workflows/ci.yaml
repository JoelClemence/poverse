on: 
  push:
  release:
    types:
    - published

name: CI/CD

jobs:
  ci:
    name: ci
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
        poetry-version: [ 1.1.5 ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }} 
    - name: Setup Poetry ${{ matrix.poetry-version }}
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: Install dependencies
      run: poetry install
    - name: Lint check
      run: |
        poetry run isort --profile black --check-only poverse tests
        poetry run black --check --diff poverse tests
        poetry run mypy --ignore-missing-imports poverse tests
    - name: SAST
      run: poetry run bandit -r poverse
    - name: Test
      run: poetry run pytest
  cd:
    name: cd
    needs:
      - ci
    if: success() && github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Setup Poetry 1.1.5
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: 1.1.5
    - name: Install dependencies
      run: poetry install
    - name: Publish pip package
      run: |
        poetry build
        poetry publish -u $PYPI_USERNAME -p $PYPI_PASSWORD
      env:
        PYPI_USERNAME: "__token__"
        PYPI_PASSWORD: "${{ secrets.PYPI_TOKEN }}"
    
    